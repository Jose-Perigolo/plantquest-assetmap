{"version":3,"file":"index.modern.js","sources":["../src/leaflet.toolbar.min.js","../node_modules/leaflet-rastercoords/rastercoords.js","../src/pqam.js"],"sourcesContent":["/* @preserve MIT LICENSE, Copyright (c) 2014-2015, Justin Manley */\n!function(t,o,i){\"use strict\";t.L.Toolbar2=(L.Layer||L.Class).extend({statics:{baseClass:\"leaflet-toolbar\"},options:{className:\"\",filter:function(){return!0},actions:[]},initialize:function(t){L.setOptions(this,t),this._toolbar_type=this.constructor._toolbar_class_id},addTo:function(t){return this._arguments=[].slice.call(arguments),t.addLayer(this),this},onAdd:function(t){var o=t._toolbars[this._toolbar_type];0===this._calculateDepth()&&(o&&t.removeLayer(o),t._toolbars[this._toolbar_type]=this)},onRemove:function(t){0===this._calculateDepth()&&delete t._toolbars[this._toolbar_type]},appendToContainer:function(t){var o,i,e,n,s=this.constructor.baseClass+\"-\"+this._calculateDepth()+\" \"+this.options.className;for(this._container=t,this._ul=L.DomUtil.create(\"ul\",s,t),this._disabledEvents=[\"click\",\"mousemove\",\"dblclick\",\"mousedown\",\"mouseup\",\"touchstart\"],i=0,n=this._disabledEvents.length;i<n;i++)L.DomEvent.on(this._ul,this._disabledEvents[i],L.DomEvent.stopPropagation);for(o=0,e=this.options.actions.length;o<e;o++)(new(this._getActionConstructor(this.options.actions[o])))._createIcon(this,this._ul,this._arguments)},_getActionConstructor:function(t){var o=this._arguments,i=this;return t.extend({initialize:function(){t.prototype.initialize.apply(this,o)},enable:function(o){i._active&&i._active.disable(),i._active=this,t.prototype.enable.call(this,o)}})},_hide:function(){this._ul.style.display=\"none\"},_show:function(){this._ul.style.display=\"block\"},_calculateDepth:function(){for(var t=0,o=this.parentToolbar;o;)t+=1,o=o.parentToolbar;return t}}),L.Evented||L.Toolbar2.include(L.Mixin.Events),L.toolbar={};var e=0;L.Toolbar2.extend=function(t){var o=L.extend({},t.statics,{_toolbar_class_id:e});return e+=1,L.extend(t,{statics:o}),L.Class.extend.call(this,t)},L.Map.addInitHook(function(){this._toolbars={}}),L.Toolbar2.Action=L.Handler.extend({statics:{baseClass:\"leaflet-toolbar-icon\"},options:{toolbarIcon:{html:\"\",className:\"\",tooltip:\"\"},subToolbar:new L.Toolbar2},initialize:function(t){var o=L.Toolbar2.Action.prototype.options.toolbarIcon;L.setOptions(this,t),this.options.toolbarIcon=L.extend({},o,this.options.toolbarIcon)},enable:function(t){t&&L.DomEvent.preventDefault(t),this._enabled||(this._enabled=!0,this.addHooks&&this.addHooks())},disable:function(){this._enabled&&(this._enabled=!1,this.removeHooks&&this.removeHooks())},_createIcon:function(t,o,i){var e=this.options.toolbarIcon;this.toolbar=t,this._icon=L.DomUtil.create(\"li\",\"\",o),this._link=L.DomUtil.create(\"a\",\"\",this._icon),this._link.innerHTML=e.html,this._link.setAttribute(\"href\",\"#\"),this._link.setAttribute(\"title\",e.tooltip),L.DomUtil.addClass(this._link,this.constructor.baseClass),e.className&&L.DomUtil.addClass(this._link,e.className),L.DomEvent.on(this._link,\"click\",this.enable,this),this._addSubToolbar(t,this._icon,i)},_addSubToolbar:function(t,o,i){var e=this.options.subToolbar,n=this.addHooks,s=this.removeHooks;e.parentToolbar=t,e.options.actions.length>0&&((i=[].slice.call(i)).push(this),e.addTo.apply(e,i),e.appendToContainer(o),this.addHooks=function(t){\"function\"==typeof n&&n.call(this,t),e._show()},this.removeHooks=function(t){\"function\"==typeof s&&s.call(this,t),e._hide()})}}),L.toolbarAction=function(t){return new L.Toolbar2.Action(t)},L.Toolbar2.Action.extendOptions=function(t){return this.extend({options:t})},L.Toolbar2.Control=L.Toolbar2.extend({statics:{baseClass:\"leaflet-control-toolbar \"+L.Toolbar2.baseClass},initialize:function(t){L.Toolbar2.prototype.initialize.call(this,t),this._control=new L.Control.Toolbar(this.options)},onAdd:function(t){this._control.addTo(t),L.Toolbar2.prototype.onAdd.call(this,t),this.appendToContainer(this._control.getContainer())},onRemove:function(t){L.Toolbar2.prototype.onRemove.call(this,t),this._control.remove?this._control.remove():this._control.removeFrom(t)}}),L.Control.Toolbar=L.Control.extend({onAdd:function(){return L.DomUtil.create(\"div\",\"\")}}),L.toolbar.control=function(t){return new L.Toolbar2.Control(t)},L.Toolbar2.Popup=L.Toolbar2.extend({statics:{baseClass:\"leaflet-popup-toolbar \"+L.Toolbar2.baseClass},options:{anchor:[0,0]},initialize:function(t,o){L.Toolbar2.prototype.initialize.call(this,o),this._marker=new L.Marker(t,{icon:new L.DivIcon({className:this.options.className,iconAnchor:[0,0]})})},onAdd:function(t){this._map=t,this._marker.addTo(t),L.Toolbar2.prototype.onAdd.call(this,t),this.appendToContainer(this._marker._icon),this._setStyles()},onRemove:function(t){t.removeLayer(this._marker),L.Toolbar2.prototype.onRemove.call(this,t),delete this._map},setLatLng:function(t){return this._marker.setLatLng(t),this},_setStyles:function(){for(var t,o,i,e=this._container,n=this._ul,s=L.point(this.options.anchor),a=n.querySelectorAll(\".leaflet-toolbar-icon\"),l=[],r=0,c=0,h=a.length;c<h;c++)a[c].parentNode.parentNode===n&&(l.push(parseInt(L.DomUtil.getStyle(a[c],\"height\"),10)),r+=Math.ceil(parseFloat(L.DomUtil.getStyle(a[c],\"width\"))),r+=Math.ceil(parseFloat(L.DomUtil.getStyle(a[c],\"border-right-width\"))));n.style.width=r+\"px\",this._tipContainer=L.DomUtil.create(\"div\",\"leaflet-toolbar-tip-container\",e),this._tipContainer.style.width=r+Math.ceil(parseFloat(L.DomUtil.getStyle(n,\"border-left-width\")))+\"px\",this._tip=L.DomUtil.create(\"div\",\"leaflet-toolbar-tip\",this._tipContainer),t=Math.max.apply(void 0,l),n.style.height=t+\"px\",o=parseInt(L.DomUtil.getStyle(this._tip,\"width\"),10),i=new L.Point(r/2,t+1.414*o),e.style.marginLeft=s.x-i.x+\"px\",e.style.marginTop=s.y-i.y+\"px\"}}),L.toolbar.popup=function(t){return new L.Toolbar2.Popup(t)}}(window,document);\n","/**\n * leaflet plugin for plain image map projection\n * @copyright 2016- commenthol\n * @license MIT\n */\n/* globals define */\n/* eslint no-var:off */\n\n;(function (factory) {\n  var L\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['leaflet'], factory)\n  } else if (typeof module !== 'undefined') {\n    // Node/CommonJS\n    L = require('leaflet')\n    module.exports = factory(L)\n  } else {\n    // Browser globals\n    if (typeof window.L === 'undefined') {\n      throw new Error('Leaflet must be loaded first')\n    }\n    factory(window.L)\n  }\n}(function (L) {\n  /**\n   * L.RasterCoords\n   * @param {L.map} map - the map used\n   * @param {Array} imgsize - [ width, height ] image dimensions\n   * @param {Number} [tilesize] - tilesize in pixels. Default=256\n   * @param {Boolean} setmaxbounds - automatically set map max bounds. Default=true\n   */\n  L.RasterCoords = function (map, imgsize, tilesize, setmaxbounds = true) {\n    this.map = map\n    this.width = imgsize[0]\n    this.height = imgsize[1]\n    this.tilesize = tilesize || 256\n    this.zoom = this.zoomLevel()\n    if (setmaxbounds && this.width && this.height) {\n      this.setMaxBounds()\n    }\n  }\n\n  L.RasterCoords.prototype = {\n    /**\n     * calculate accurate zoom level for the given image size\n     */\n    zoomLevel: function () {\n      return Math.ceil(\n        Math.log(\n          Math.max(this.width, this.height) /\n          this.tilesize\n        ) / Math.log(2)\n      )\n    },\n    /**\n     * unproject `coords` to the raster coordinates used by the raster image projection\n     * @param {Array} coords - [ x, y ]\n     * @return {L.LatLng} - internal coordinates\n     */\n    unproject: function (coords) {\n      return this.map.unproject(coords, this.zoom)\n    },\n    /**\n     * project `coords` back to image coordinates\n     * @param {Array} coords - [ x, y ]\n     * @return {L.LatLng} - image coordinates\n     */\n    project: function (coords) {\n      return this.map.project(coords, this.zoom)\n    },\n    /**\n     * get the max bounds of the image\n     */\n    getMaxBounds: function () {\n      var southWest = this.unproject([0, this.height])\n      var northEast = this.unproject([this.width, 0])\n      return new L.LatLngBounds(southWest, northEast)\n    },\n    /**\n     * sets the max bounds on map\n     */\n    setMaxBounds: function () {\n      var bounds = this.getMaxBounds()\n      this.map.setMaxBounds(bounds)\n    }\n  }\n\n  return L.RasterCoords\n}))\n; // eslint-disable-line semi\n","/* Copyright 2022-2023 PlantQuest Ltd, MIT License */\n\nimport L from 'leaflet'\nimport './leaflet.toolbar.min.js'\nimport 'leaflet.markercluster'\n\n\nimport Pkg from '../package.json'\n\n\nimport Seneca from 'seneca-browser'\nimport SenecaEntity from 'seneca-entity'\n\nimport '../node_modules/leaflet-rastercoords/rastercoords.js'\n\n\n;(function(W, D) {\n\n  window.PLANTQUEST_ASSETMAP_DEBUG = {}\n  \n  const log = (...args) => {\n    if(true === window.PLANTQUEST_ASSETMAP_LOG || 'ERROR' === args[1]) {\n      console.log.apply(null, args)\n    }\n  }\n  \n  const scriptID = (''+Math.random()).substring(2,8)\n\n  log('PQAM','script-load', 'start', 'version=', Pkg.version, 'scriptid=', scriptID)\n\n  if(W.PlantQuestAssetMap) {\n    log('PQAM','script-load', 'exists', scriptID, W.PlantQuestAssetMap.id)\n    return\n  }\n  else {\n    log('PQAM','script-load', 'create', scriptID)\n  }\n  \n  let $ = D.querySelector.bind(D)\n  let $All = D.querySelectorAll.bind(D)\n  let Element = D.createElement.bind(D)\n  \n  let rc\n  \n  function PlantQuestAssetMap() {\n    const self = {\n      id: (''+Math.random()).substring(2,8),\n      info: {\n        name: '@plantquest/assetmap',\n        version: Pkg.version,\n      },\n      \n      // default config\n      config: {\n        width: '100%',\n        height: '100%',\n        domInterval: 111,\n        mapInterval: 111,\n        mapBounds: [5850, 7800],\n        mapImg: [7800, 5850],\n        mapStart: [3000, 2200],\n        mapStartZoom: 2,\n        mapRoomFocusZoom: 5,\n        mapMinZoom: 2,\n        mapMaxZoom: 6,\n        assetFontScaleRoom: 10,\n        assetFontScaleZoom: 4,\n        assetFontHideZoom: -1,\n        showAllAssets: true,\n\n        debugClick: false,\n        infobox: true,\n        \n        data: 'https://demo.plantquest.app/sample-data.js',\n        mode: 'demo',\n        apikey: '<API KEY>',\n        endpoint: '/',\n        tilesEndPoint: 'https://demo.plantquest.app/tiles',\n\n        states: {\n          up: { color: '#99f', name: 'Up', marker: 'standard' },\n          down: { color: '#666', name: 'Down', marker: 'standard' },\n          missing: { color: '#f9f', name: 'Missing', marker: 'alert' },\n          alarm: { color: '#f99', name: 'Alarm', marker: 'alert' },\n        },\n        \n        map: [],\n        start: {\n          map: 0,\n          level: 0,\n        },\n\n        room: {\n          color: '#33f',\n        },\n\n        label: {\n          zoom: null // null => appear at mapMaxZoom\n        },\n\n        plants: [],\n\n        asset: {\n          cluster: true\n        }\n      },\n      data: {},\n      assetMap: {},\n      roomMap: {},\n      current: {\n        started: false,\n        room: {},\n        asset: {},\n      },\n      upload: {\n        assetI: 0,\n        interval: null,\n      },\n      listeners: [],\n    }\n\n    self.log = function(...args) {\n      log('PQAM', ...args)\n    }\n    \n    \n    self.start = function(config) {\n      if(self.current.started) {\n        self.clearRoomAssets()\n        self.unselectRoom()\n        \n        self.map.setView(self.config.mapStart, self.config.mapStartZoom)\n        return\n      }\n      \n      self.config = { ...self.config, ...(config || {}) }\n      self.log('start', JSON.stringify(config))\n      \n      self.config.base = self.config.base || ''\n\n      if(!self.config.base.endsWith('/')) {\n        self.config.base += '/'\n      }\n      \n      function loading() {\n        self.target = $('#plantquest-assetmap')\n        if(!self.target) {\n          self.log('ERROR', 'element-id', 'plantquest-assetmap', 'missing')\n          clearInterval(loadingInterval)\n          return\n        }\n                \n        if (null != self.target && false === self.current.started) {\n          self.current.started = true\n\n          self.target.style.width = self.config.width\n          self.target.style.height = self.config.height\n\n          clearInterval(loadingInterval)\n          self.log('start','target-found',self.target)\n\n          self.log(\n            'start','target-size',\n            'widthcss',self.config.width,\n            'heightcss',self.config.height,\n          )\n          \n          self.load(()=>{\n            self.log('start','load-done',self.data)\n            \n            self.render(()=>{\n              self.log('start','render-done')\n              \n              self.emit({\n                srv:'plantquest',\n                part:'assetmap',\n                state: 'ready'\n              })\n            })\n          })\n        }\n      }\n\n      const loadingInterval = setInterval(loading, 50)\n    }\n\n    \n    self.load = async function(done) {\n\n      let seneca = await self.getSeneca()\n                  \n      function reset() {\n        // reset\n        self.data.deps = {}\n        self.data.roomMap = {}\n        self.data.assetMap = {}\n        self.data.assets = []\n        self.data.rooms = []\n        self.data.buildings = []\n        self.data.levels = []\n        self.data.maps = []\n      }\n      \n      async function processData(json) {\n      \n        self.data = json\n        \n        let assets = []\n        let assetMap = {}\n        \n        \n        let assetProps = self.data.assets[0]\n        for(let rowI = 1; rowI < self.data.assets.length; rowI++) {\n          let row = self.data.assets[rowI]\n          let assetID = row[0]\n          assetMap[assetID] = assetProps.reduce((a,p,i)=>((a[p]=row[i]),a),{})\n        }\n            \n        \n        self.data.assetMap = assetMap\n        \n        \n        let roomMap = self.data.rooms.reduce((a,r)=>(a[r.room]=r,a),{})\n        self.data.roomMap = roomMap\n        \n        self.log('data loaded')\n\n  \n  \n        done(json)\n        \n      }\n      \n      async function loadData() {\n        if(self.dataLoaded) {\n          done(self.data)\n          return\n        }\n        \n        let query = {\n          project_id: self.config.project_id,\n          plant_id: self.config.plant_id,\n          stage: self.config.stage,\n        }\n\n        let{ assets } =\n            await seneca.post('srv:plantquest,part:assetmap,list:asset',\n                              { query, } )\n        let{ rooms } =\n            await seneca.post('srv:plantquest,part:assetmap,list:room',\n                              { query, } )\n        let{ buildings } =\n            await seneca.post('srv:plantquest,part:assetmap,list:building',\n                              { query, } )\n        \n        self.data.assets = assets\n        self.data.rooms = rooms\n        \n        self.data.deps = {}\n        \n        let {\n          deps,\n          maps,\n          levels,\n          // buildings,\n          assetMap,\n          roomMap\n        } = generate( { assets, rooms } )\n        \n        self.data.buildings = buildings\n        self.data.levels = levels\n        self.data.maps = maps\n        \n        self.data.assetMap = assetMap\n        self.data.roomMap = roomMap\n        \n        self.data.deps = deps\n        self.dataLoaded = true\n        \n        done(self.data)\n        \n      }\n      \n      if(self.config.mode == 'demo') {\n      \n        if('https://demo.plantquest.app/sample-data.js' === self.config.data) {\n          const head = $('head')\n          const skript = document.createElement('script')\n          skript.setAttribute('src', self.config.data)\n          head.appendChild(skript)\n\n          let waiter = setInterval(()=>{\n            self.log('loading data...')\n            if(window.PLANTQUEST_ASSETMAP_DATA) {\n            \n              clearInterval(waiter)\n              processData(window.PLANTQUEST_ASSETMAP_DATA)\n            }\n          },111)\n        }\n        else {\n          fetch(self.config.data)\n            .then(response => {\n              if (!response.ok) {\n                throw new Error(\"HTTP error \" + response.status)\n              }\n              return response.json()\n            })\n            .then(json => processData(json))\n            .catch((err)=>self.log('ERROR','load',err))\n        }\n      } else if (self.config.mode == 'live') {\n        loadData()\n      }\n    }\n\n    \n    self.render = function(done) {      \n      injectStyle()\n      \n      let root = Element('div')\n      root.style.boxSizing = 'border-box'\n      root.style.width = '100%'\n      root.style.height = '100%'\n      root.style.backgroundColor = 'rgb(203,211,144)'\n      root.style.padding = '0px'\n      root.style.textAlign = 'center'\n      root.style.position = 'relative'\n      root.innerHTML = buildContainer()\n      self.target.appendChild(root)\n      \n\n      setTimeout(()=>{\n        self.vis.map.elem = $('#plantquest-assetmap-map')\n        self.build()\n        self.showMap(0)\n        done()\n      }, self.domInterval)\n    }\n\n    self.send = async function(msg) {\n      self.log('send', 'in', msg)\n      \n      let result = await self.seneca.post(msg)\n      \n      if(null != msg.zoom) {\n        self.map.setZoom(msg.zoom)\n      }\n      \n      if(null != msg.view) {\n        self.map.setView(msg.view, msg.zoom || self.config.mapMinZoom)\n      }\n\n      return result\n    }\n\n    self.listen = function(listener) {\n      if(null == listener || 'function' !== typeof(listener)) {\n        self.log('ERROR', 'listen', 'bad-listener', listener)\n                 \n      }\n      else {\n        self.listeners.push(listener)\n        self.log('listen', 'set-listener',\n                 '<<'+listener.toString()\n                 .substring(0,77).replace(/[\\r\\n]/g,'')+'...>>')\n      }\n    }\n\n    \n    self.click = function(what, event) {\n      event && event.stopPropagation()\n      let msg = Object.assign({\n        srv:'plantquest',\n        part:'assetmap',\n      }, what)\n      self.log('click',msg)\n      self.emit(msg)\n    }\n\n    \n    self.emit = function(msg) {\n      self.log('send', msg)\n      self.listeners.forEach(listener=>{\n        try {\n          listener(msg)\n        }\n        catch(e) {\n          self.log('ERROR', 'emit', 'listener', e, msg, listener)\n        }\n      })\n    }\n\n\n    self.vis = {\n      map: {\n      },\n      ctrl: {\n      }\n    }\n    \n\n    self.loc = {\n      x: 0,\n      y: 0,\n      poly: null,\n      room: null,\n      chosen: {\n        poly: null,\n        room: null,\n      },\n      stateShown: {},\n      asset: {},\n      map: -1,\n    }\n\n    self.leaflet = {\n\n    }\n    \n    self.map = null\n    self.layer = {}\n\n    \n    self.build = function() {\n      let ms = {\n        mapurl: self.config.map[self.config.start.map],\n        bounds: [[0, 0], [...self.config.mapBounds]]\n      }\n\n      self.log('build', ms, L)\n      \n      \n      self.map = L.map('plantquest-assetmap-map', {\n        crs: L.CRS.Simple,\n        scrollWheelZoom: true,\n        attributionControl: false,\n        minZoom: self.config.mapMinZoom,\n        maxZoom: self.config.mapMaxZoom,\n      })\n      rc = self.rc = new L.RasterCoords(self.map, self.config.mapImg)\n\n      // Place labels in separate Pane to ensure ordering below assets,\n      // prevents lost click events.\n      self.map.createPane('labels')\n      self.map.getPane('labels').style.zIndex = 220\n      self.map.getPane('labels').style.pointerEvents = 'none'\n      \n      self.layer.room = L.layerGroup().addTo(self.map)\n      self.layer.room.name$ = 'room'\n      \n      self.layer.label = L.layerGroup().addTo(self.map)\n      self.layer.label.name$ = 'label'\n      \n      self.map.on('zoomstart', self.zoomStartRender)\n      self.map.on('zoomend', self.zoomEndRender)\n      \n      setTimeout(()=>{\n        let mapStart = c_asset_coords({x: self.config.mapStart[0], y: self.config.mapImg[1]-self.config.mapStart[1]})\n        self.map.setView(mapStart, self.config.mapStartZoom)\n        \n        self.leaflet.mapCenter = self.map.getCenter()\n        \n      },self.config.mapInterval/2)\n      \n      // L.imageOverlay(ms.mapurl, ms.bounds).addTo(self.map);\n\n\n      \n\n      if( self.config.asset.cluster) {\n        self.layer.circles = L.layerGroup().addTo(self.map)\n        self.layer.circles.name$ = 'circles'\n                \n        self.layer.asset = L.markerClusterGroup({\n          spiderfyOnMaxZoom: false,\n          showCoverageOnHover: false,\n          // zoomToBoundsOnClick: true,\n          zoomToBoundsOnClick: false,\n          // singleMarkerMode: true,\n          // spiderfyDistanceMultiplier: -100,\n          maxClusterRadius: 40,\n          chunkedLoading: true,\n\n          spiderLegPolylineOptions: { weight: 1.5, color: 'black', opacity: 2.5 },\n          \n          spiderfyLinear: false,\n          spiderfyLinearDistance: 30,\n          spiderfyLinearSeparation: 45,\n        }).addTo(self.map)\n\n        \n        self.layer.asset.on('clusterclick', mev=>{\n          let layer = mev.layer\n          let {xco, yco} = convert_latlng(mev.latlng)\n          \n          let assetlist = layer.getAllChildMarkers().map(marker=>{\n            return self.data.assetMap[marker.assetID]\n          })\n\n          console.log('CLUSTER-CLICK', assetlist)\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            event: 'clusterclick',\n            // xco,\n            // yco,\n            assetlist,\n          })\n        })\n\n        \n        self.map.on('layeradd', event=> { // zoom-in\n          let layer = event.layer // , circle, latlng, index, asset, arr, assetName\n\n\t  if(layer instanceof L.Marker && !(layer instanceof L.MarkerCluster)){\n\t    \n\t    let assetCurrent = self.current.asset[layer.assetID]\n\t    let infobox = assetCurrent.infobox\n\t    if(assetCurrent) {\n\t      // console.error('layeradd: ', assetCurrent)\n\t      setTimeout(()=>{\n\t        \n                let lem = assetCurrent.label.getElement()\n                if(null != lem) {\n                  lem.style.display = infobox ? null : 'none'\n                  lem.style.width = ''\n                  lem.style.height = ''\n                  lem.style.fontSize = ''\n                }\n                assetCurrent.poly.addTo(self.layer.circles)\n                \n                \n                // state: asset blink\n                assetCurrent.blinkId = setInterval(function blink() {\n                  if(assetCurrent.poly) {\n                    if(assetCurrent.blink) {\n                      if(true === assetCurrent.blinkState) {\n                        assetCurrent.poly.addTo(self.layer.circles)\n                        assetCurrent.blinkState = false\n                      }\n                      else {\n                        assetCurrent.poly.remove(self.layer.circles)\n                        assetCurrent.blinkState = true\n                      }\n                    }\n                  }\n                }, self.config.mapInterval)\n                \n\t      }, 11)\n\t      \n\t    }\n\t  }\n          \n        })\n        \n        self.map.on('layerremove', event=> { // zoom-in\n          let layer = event.layer // , circle, latlng, index, asset, arr, assetName\n\n\t  if(layer instanceof L.Marker && !(layer instanceof L.MarkerCluster)){\n\t    \n\t    let assetCurrent = self.current.asset[layer.assetID]\n\t    \n\t    if(assetCurrent) {\n\t      // console.log('layerremove: ', assetCurrent)\n\t      setTimeout(()=>{\n\t        if(assetCurrent.poly) {\n\t          assetCurrent.poly.remove()\n\t        }\n\t        \n\t        if(assetCurrent.blinkId) {\n\t          clearInterval(assetCurrent.blinkId)\n\t        }\n                \n\t      }, 11)\n\t      \n\t      \n\t    }\n\t  }\n          \n        })\n        \n      }\n\n      // No clustering\n      else {\n        self.layer.asset = L.layerGroup().addTo(self.map)\n      }\n\n      \n      \n      // TODO: move to generate\n      function generate_labels() {\n        self.poly_labels = self.poly_labels || {}\n\n        for (let room of self.data.rooms) {\n          let poly_labels = self.poly_labels[room.map] = self.poly_labels[room.map] || []\n\n\n          if (self.data.roomMap[room.room] && room.area === '1') {\n            // console.log(room.area)\n\n            let place;\n            // place = c_asset_coords({x: room.xco, y: room.yco}\n            // console.log( ) )\n\n            let room_poly = convertRoomPoly(self.config.mapImg, room.poly)\n\n\n            let poly = L.polygon(\n              room_poly, {\n                color: 'transparent',\n                pane: 'labels',\n              })\n\n            poly.name$ = 'ROOM:'+room.room\n\n            // Create the tooltip with the initial content\n            var tooltip = L.tooltip({\n              permanent: true,\n              direction: 'center',\n\n              // direction: 'sticky',\n              opacity: 1,\n              className: 'polygon-labels',\n\n            })\n\n            // Bind the tooltip to the polygon\n            poly.bindTooltip(tooltip);\n            let _c = poly.getBounds().getCenter()\n\n            tooltip.setContent(`<div class=\"leaflet-zoom-animted\"> ${room.room} </div>`);\n            /*\n                          setTimeout(() => {\n                            const label = L.marker(place, {\n                              icon: L.divIcon({\n                                // iconSize: [90, 30], // default size\n                                className: 'polygon-labels',\n                                html: `<div> ${room.room} </div>`\n                              })\n                            })\n                            // .addTo(self.map);\n\n                          }, 11)\n\n            */\n            // poly.addTo(self.map)\n\n            poly_labels.push(poly)\n\n          }\n\n\n        }\n\n      }\n      generate_labels()\n      \n      \n      // Define a custom control\n      function createDebugLog(content) {\n        let debugLog = L.Control.extend({\n          options: {\n            position: 'topleft',\n          },\n\n          onAdd: function (map) {\n            let container = L.DomUtil.create('div', 'control-panel')\n\n\n            let _div = document.createElement('div')\n    \n            _div.textContent = content\n            container.appendChild(_div)\n    \n    \n            L.DomEvent.disableClickPropagation(container)\n            L.DomEvent.disableScrollPropagation(container)\n\n            return container\n          }\n        })\n        return new debugLog()\n      }\n        \n      if(self.config.debugClick) {\n        self.map.on('click', (mev)=>{\n          let {xco, yco} = convert_latlng(mev.latlng)\n            \n          let content = ''\n\t  if(self.leaflet.debugLog) {\n\t    self.leaflet.debugLog.remove()\n\t    self.leaflet.debugLog = null\n\t  }\n\t  let asset_data = {}\n\t  asset_data.xco = xco\n\t  asset_data.yco = yco\n\t  content = JSON.stringify(asset_data)\n\t    \n\t  self.leaflet.debugLog = createDebugLog(content)\n\t  // Add the custom control to the map\n          self.map.addControl(self.leaflet.debugLog)\n            \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            event: 'click',\n            meta: asset_data,\n          })\n            \n        })\n      }\n      \n      if(window.PLANTQUEST_ASSETMAP_DEBUG.show_coords) {\n      \n        self.listen((msg) => {\n\t  if(msg.show == 'asset') {\n\t    let { asset } = msg\n\t    let content = ''\n\t    if(self.leaflet.debugLog) {\n\t      self.leaflet.debugLog.remove()\n\t      self.leaflet.debugLog = null\n\t    }\n\t    if(asset) {\n\t      let asset_data = {}\n\t      asset_data.tag = asset.tag\n\t      asset_data.id = asset.id\n\t      asset_data.xco = asset.xco\n\t      asset_data.yco = asset.yco\n\t      content = JSON.stringify(asset_data)\n\t    }\n\t    self.leaflet.debugLog = createDebugLog(content)\n\t    // Add the custom control to the map\n            self.map.addControl(self.leaflet.debugLog)\n\t  }\n\t  else if(msg.event == 'click') {\n\t    let meta = msg.meta\n\t      \n\t    let asset_data = {}\n\t    let content = ''\n\t    if(self.leaflet.debugLog) {\n\t      self.leaflet.debugLog.remove()\n\t      self.leaflet.debugLog = null\n\t    }\n\t    asset_data.xco = meta.xco\n\t    asset_data.yco = meta.yco\n\t    content = JSON.stringify(asset_data)\n\t    self.leaflet.debugLog = createDebugLog(content)\n            self.map.addControl(self.leaflet.debugLog)\n\t      \n\t  }\n\t  else {\n\t    if(self.leaflet.debugLog) {\n\t      self.leaflet.debugLog.remove()\n\t      self.leaflet.debugLog = null\n\t    }\n\t    self.leaflet.debugLog = createDebugLog('DEBUG LOG')\n\t      \n            self.map.addControl(self.leaflet.debugLog)\n\t  }\n\t  \n\t})\n      }\n      \n      if(self.config.showAllAssets) {\n        setTimeout( () => {\n          self.send({\n            srv:'plantquest',\n            part:'assetmap',\n            show: 'asset',\n            asset: null,\n          })\n        }, 11)\n      }\n       \n      self.map.on('mousemove', (mev)=>{\n        let {xco, yco} = convert_latlng(mev.latlng)\n        self.loc.x = xco\n        self.loc.y = yco\n        // console.log(self.loc.x, self.loc.y)\n      })\n      \n\n      // setInterval(self.checkRooms, self.config.mapInterval)\n\n\n      let levelActions = []\n      \n      self.data.levels.forEach((level,index)=>{\n        levelActions.push(\n          L.Toolbar2.Action.extend({\n            options: {\n              toolbarIcon: {\n                html: level,\n              }\n            },\n            \n            addHooks: function () {\n              self.showMap(index)\n            }\n          })\n        )\n      })\n\n      self.config.plants.forEach((plant,index)=>{\n        levelActions.push(\n          L.Toolbar2.Action.extend({\n            options: {\n              toolbarIcon: {\n                html: plant.name,\n              }\n            },\n            \n            addHooks: function () {\n              self.showMap(index)\n            }\n          })\n        )\n      })\n\n      self.map.addLayer(new L.Toolbar2.Control({\n        actions: levelActions,\n        position: 'topright',\n      }))\n\n        \n      /*\n      // new L.Toolbar2.Control({\n      //   actions: levelActions\n      // }).addTo(self.map)\n\n      let plantActions = []\n      self.config.plants.forEach((plant,index)=>{\n        plantActions.push(\n          L.Toolbar2.Action.extend({\n            options: {\n              toolbarIcon: {\n                html: plant.name,\n              }\n            },\n            \n            addHooks: function () {\n              self.showMap(index)\n            }\n          })\n        )\n      })\n      \n      // new L.Toolbar2.Control({\n      //   position: 'bottomleft',\n      //   actions: plantActions,\n      // }).addTo(self.map)\n\n      self.map.addLayer(\n        new L.Toolbar2.Control({\n          position: 'bottomleft',\n          actions: plantActions,\n        }).addTo(self.map)\n        )\n        */\n    }\n\n\n    self.zoomStartRender = function() {\n      let zoom = self.map.getZoom()\n      if(null == zoom) return;\n      // console.log('start', zoom)\n      \n      \n\n        \n        \n      if(zoom != 4) {\n      /*\n        if(self.polys) {\n          for(let poly of self.polys) {\n            poly.remove()\n          }\n        \n        }\n        */\n        \n      }\n\n    }\n\n\n    self.zoomEndRender = function() {\n      let zoom = self.map.getZoom()\n      if (null == zoom) return;\n      // console.log('end: ', zoom)\n\n      let pos = (1+self.loc.map)\n      \n      self.poly_labels = self.poly_labels || {}\n      \n      let labels = self.poly_labels[pos] || []\n      self.prev_labels = self.prev_labels || []\n      \n      \n      let labelZoomLevel =\n          null == self.config.label.zoom ? self.config.mapMaxZoom : \n          self.config.label.zoom\n      \n      // if (zoom >= 6) {\n      if (zoom >= labelZoomLevel) {\n        for(let label of self.prev_labels) {\n          label.remove()\n        }\n        \n        \n        for(let label of labels) {\n          label.remove()\n          // label.addTo(self.map)\n          label.addTo(self.layer.label)\n        }\n          \n        self.setLabel = true\n        self.prev_labels = labels\n\n      } \n      else {\n        for(let label of self.prev_labels) {\n          label.remove()\n        }\n        \n        for (let label of labels) {\n          label.remove()\n        }\n\n        self.setLabel = false\n\n     }\n      \n\n      // self.layer.label.bringToBack()\n      \n      /*\n      if(self.config.assetFontHideZoom < zoom) {\n        let assetFontSize = self.config.assetFontScaleRoom +\n          (zoom * self.config.assetFontScaleZoom)        \n\n        let assetFontSizePts = assetFontSize+'pt'\n      \n        $All('.plantquest-assetmap-asset-label-green')\n          .forEach(label => {\n            label.style.display='block'\n          })\n        $All('.plantquest-assetmap-asset-label-red')\n          .forEach(label => {\n            label.style.display='block'\n          })\n      }\n      else {\n        $All('.plantquest-assetmap-asset-label-green')\n          .forEach(label => {\n            label.style.display='none'\n          })\n        $All('.plantquest-assetmap-asset-label-red')\n          .forEach(label => {\n            label.style.display='none'\n          })\n      }\n      */\n    }\n    \n    \n    self.checkRooms = function() {\n      let xco = self.loc.x\n      let yco = convert_poly_y(self.config.mapImg, self.loc.y)\n      \n      let rooms = Object.values(self.data.rooms)\n\n      for(let room of rooms) {\n        if((1+self.loc.map) != room.map) {\n          continue\n        }\n        \n        let alarmState = self.current.room[room.room] ?\n            self.current.room[room.room].alarm : null\n\n        let inside = room.poly && pointInPolygon([yco,xco], room.poly)\n        let alreadyShown = room === self.loc.room || room === self.loc.chosen.room\n        let drawRoom = inside && !alreadyShown && 'red' !== alarmState\n        \n        \n        if(!drawRoom && !inside && self.loc.room === room) {\n          if(self.loc.poly) {\n            self.loc.poly.remove(self.layer.room)\n            self.loc.room = null\n          }\n        }\n        else if(drawRoom) {\n          if(self.loc.poly) {\n            self.loc.poly.remove(self.layer.room)\n            self.loc.room = null\n          }\n          \n          try {\n            let roomState = self.current.room[room.room] ||\n                (self.current.room[room.room]={alarm:'neutral'})\n            let room_poly = convertRoomPoly(self.config.mapImg, room.poly)\n\n            self.loc.room = room\n            self.loc.alarmState = alarmState\n            \n\n            self.loc.poly = L.polygon(\n              room_poly, {\n                // color: self.resolveRoomColor(roomState.alarm,'lo')\n                color: self.config.room.color\n              })\n\n            self.loc.poly.on('click', ()=>{\n              // console.log('SELECT ROOM', room)\n              self.selectRoom(room.room)\n            })\n            \n            self.loc.poly.addTo(self.layer.room)\n          }\n          catch(e) {\n            self.log('ERROR','map','1020', e.message, e)\n          }\n        }\n      }\n\n\n    }        \n\n\n    self.selectRoom = function(roomId,opts) {\n      opts = opts || {}\n      try {\n        let room = self.data.roomMap[roomId]\n        let isChosen = self.loc.chosen.room && roomId === self.loc.chosen.room.room\n        \n        if(null == self.data.roomMap[roomId] || isChosen) {\n          self.focusRoom(self.loc.chosen.room)\n          return\n        }\n\n        self.log('selectRoom', roomId, room)\n\n        // self.showMap(parseInt(room.map)-1)\n        \n        let roomState = self.current.room[room.room] ||\n            (self.current.room[room.room]={alarm:'neutral'})\n\n        if(self.loc.poly) {\n          self.loc.poly.remove(self.layer.room)\n          self.loc.poly = null\n        }\n        self.loc.room = null\n\n        if(self.loc.chosen.poly && room !== self.loc.chosen.room) {\n          let prevRoom = self.loc.chosen.room\n          let prevRoomState = self.current.room[prevRoom.room] ||\n              (self.current.room[prevRoom.room]={alarm:'neutral'})\n\n          // if('red'===prevRoomState.alarm) {\n          //   self.loc.chosen.poly.setStyle({\n          //     color: self.resolveRoomColor(prevRoomState.alarm,'lo')\n          //   })\n          //   self.loc.stateShown[prevRoom.room].poly = self.loc.chosen.poly\n          // }\n          // else {\n            self.loc.chosen.poly.remove(self.layer.room)\n            self.loc.chosen.poly = null\n        // }\n        }\n\n        if(self.loc.popup) {\n          self.loc.popup.remove(self.map)\n          self.loc.popop = null\n        }\n\n        self.loc.chosen.room = room\n\n\n        // if('red' === roomState.alarm) {\n        //   let stateShown = self.loc.stateShown[room.room] ||\n        //       (self.loc.stateShown[room.room]= {})\n        //   if(stateShown.poly) {\n        //     stateShown.poly.setStyle({\n        //       color: self.resolveRoomColor(roomState.alarm,'hi')\n        //     })\n        //     self.loc.chosen.poly = stateShown.poly\n        //   }\n        // }\n        // else {\n          let room_poly = convertRoomPoly(self.config.mapImg, room.poly)\n          \n          self.loc.chosen.poly = L.polygon(\n            room_poly, {\n              // color: self.resolveRoomColor(roomState.alarm,'hi')\n              color: self.config.room.color\n          })\n          self.loc.chosen.poly.on('click', ()=>self.selectRoom(room.room))\n          \n          self.loc.chosen.poly.addTo(self.layer.room)\n      // }\n\n        let roomlatlng = self.focusRoom(room)\n        \n        // convert for popup\n        let roompos_y = convert_poly_y(self.config.mapImg, roomlatlng[0])\n        let roompos_x = roomlatlng[1]\n        let roompos = c_asset_coords({y: roompos_y-4, x: roompos_x+5 } )\n               \n        // map focus on room selection\n        self.loc.popup = L.popup({\n          autoClose: false,\n          closeOnClick: false,\n        })\n          .setLatLng(roompos)\n          .setContent(self.roomPopup(self.loc.chosen.room))\n          .openOn(self.map)\n        \n        // self.map.setView(roompos,\n                         // self.map.getZoom())\n                         \n\n        self.showRoomAssets(room.room)\n        self.clearRoomAssets(room.room)\n        // self.zoomEndRender()\n        \n        if(!opts.mute) {\n          self.click({select:'room', room:self.loc.chosen.room.room})\n        }\n      }\n      catch(e) {\n        self.log('ERROR','selectRoom','1010', roomId, e.message, e)\n      }\n    }\n\n\n    self.unselectRoom = function() {\n      let prevRoom = self.loc.chosen.room\n      if(prevRoom) {\n        self.loc.chosen.room = null\n        let prevRoomState = self.current.room[prevRoom.room] ||\n            (self.current.room[prevRoom.room]={alarm:'neutral'})\n      \n        if('red'===prevRoomState.alarm) {\n          self.loc.chosen.poly.setStyle({\n            color: self.resolveRoomColor(prevRoomState.alarm,'lo')\n          })\n          self.loc.stateShown[prevRoom.room].poly = self.loc.chosen.poly\n        }\n        else {\n          self.loc.chosen.poly.remove(self.layer.room)\n        }\n\n        self.loc.chosen.poly = null\n\n        if(self.loc.popup) {\n          self.loc.popup.remove(self.map)\n          self.loc.popop = null\n        }\n      }\n    }\n\n    \n    self.focusRoom = function(room) {\n      if(null == room) return;\n      \n      let roomlatlng = [0,0]\n      for(let point of room.poly) {\n        if(point[0] > roomlatlng[0]) {\n          roomlatlng[0] = point[0]\n          roomlatlng[1] = point[1]\n        }\n      }\n\n      // let roompos = [roomlatlng[0],roomlatlng[1]-30]\n      \n      let roompos_y = convert_poly_y(self.config.mapImg, roomlatlng[0])\n      let roompos_x = roomlatlng[1]\n      let roompos = c_asset_coords({y: roompos_y, x: roompos_x-30 } )\n      // self.map.setView(roompos, self.config.mapRoomFocusZoom)\n      self.map.setView(roompos,\n                        self.config.mapRoomFocusZoom)\n                        \n      self.zoomEndRender()\n      \n      return roomlatlng\n    }\n\n    \n    self.showRoom = function(room, stateName) {\n      self.log('showRoom', room, stateName)\n\n      \n      stateName = stateName || assetCurrent.stateName || (Object.keys(self.config.states)[0])\n      let stateDef = self.config.states[stateName]\n\n      room = 'string' === typeof room ? self.data.roomMap[room] : room\n      \n      try {\n        stateDef = self.alertRoomState(room.room, stateDef)\n        \n        let roomCurrent =\n            self.current.room[room.room] ||\n            (self.current.room[room.room]={})\n\n        roomCurrent.stateDef = stateDef\n\n        let stateShown = self.loc.stateShown[room.room] ||\n            (self.loc.stateShown[room.room]= {})\n\n        if(room === self.loc.chosen.room) {\n          if(self.loc.chosen.poly) {\n            self.loc.chosen.poly.setStyle({\n              // color: self.resolveRoomColor(roomCurrent.stateDef,'hi')\n              color: self.config.room.color\n            })\n          }\n        }\n        else {\n          if(stateShown.poly) {\n            stateShown.poly.remove(self.layer.room)\n            stateShown.poly = null\n          }\n            \n          // if('red' === alarm) {\n          //   stateShown.poly = L.polygon(\n          //     room.poly, {\n          //       color: self.resolveRoomColor(roomCurrent.stateDef,'lo')\n          //     })\n          //   stateShown.poly.addTo(self.layer.room)\n          //   stateShown.poly.on('click', ()=>self.selectRoom(room.room))\n          // }\n        }\n        \n      }\n      catch(e) {\n        self.log('ERROR','map','showRoom','1040', e.message, e)\n      }\n    }\n\n    \n    // Room state is set to highest priority (by order of definition in config.states) alert state\n    self.alertRoomState = function(roomID, newStateDef) {\n      let actualStateDef = newStateDef\n      let newPriority = Object.keys(self.config.states).indexOf(newStateDef.stateName)\n      \n      let assets = (self.data.deps.pc.room[roomID] ?\n                    self.data.deps.pc.room[roomID].asset : []) || []\n      for(let assetID of assets) {\n        let assetState = self.current.asset[assetID]\n        if(assetState && assetState.stateName) {\n          let stateDef = self.config.states[assetState.stateName]\n          if('alert' === stateDef.marker) {\n            let priority = Object.keys(self.config.states).indexOf(assetState.stateName)\n            if(newPriority < priority) {\n              actualStateDef = stateDef\n            }\n          }\n        }\n      }\n\n      return actualStateDef\n    }\n    \n\n    self.showAsset = function(assetID, stateName, hide, blink, showRoom, infobox) {\n      let assetCurrent =\n          self.current.asset[assetID] || (self.current.asset[assetID]={})\n\n      stateName =\n        stateName || assetCurrent.stateName || (Object.keys(self.config.states)[0])\n\n      let stateDef = self.config.states[stateName]\n      let assetProps = self.data.assetMap[assetID]\n      \n      assetCurrent.infobox = infobox == null ? true : infobox\n      \n      self.log('showAsset', assetID, stateName,\n               stateDef, 'hide', hide, 'blink', blink, assetProps)\n      \n      if(null == assetProps) {\n        return\n      }\n      \n      if(assetCurrent.poly) {\n        assetCurrent.poly.remove(self.layer.asset)\n        assetCurrent.poly = null\n      }\n\n      if(assetCurrent.label) {\n        self.layer.asset.removeLayer(assetCurrent.label)\n        assetCurrent.label = null\n      }\n      \n      if(showRoom) {\n        self.showRoom(assetProps.room, stateName)\n      \n        // Only draw polys if room is chosen or not hiding\n        if(hide ||\n          (null == self.loc.chosen.room ||\n            assetProps.room !== self.loc.chosen.room.room))\n          {\n            return\n          }\n      }\n      \n      if(hide) {\n        return\n      }\n      \n      let assetPoint = [\n        assetProps.yco,\n        assetProps.xco,\n      ]\n      let ax = assetPoint[1]\n      let ay = assetPoint[0]\n      \n      assetCurrent.stateName = stateName\n      let color = stateDef.color\n      \n      let ay_poly = convert_poly_y(self.config.mapImg, ay)\n      let room_poly = convertRoomPoly(self.config.mapImg, [\n          [ay_poly+10,ax],\n          [ay_poly-10,ax+10],\n          [ay_poly-10,ax-10],\n      ])\n      \n      if('alert' === stateDef.marker) {\n        assetCurrent.poly = L.polygon(room_poly, {\n          color: color,\n        })\n      }\n      else {\n        assetCurrent.poly =\n          L.circle(\n            c_asset_coords({x: ax, y: ay}), {\n              radius: 0.2,\n              color: color,\n              weight: 2,\n            })\n          .on('click', ()=>{\n            console.log('ASSET-CLICK', assetCurrent)\n            self.emit({\n              srv: 'plantquest',\n              part: 'assetmap',\n              event: 'click',\n              on: 'asset',\n              asset: assetProps\n            })\n          })\n      }\n\n      \n      assetCurrent.blink = null == blink ? false : blink\n      \n      setTimeout(()=>{\n        if(null != assetCurrent.label) {\n          return\n        }\n\n        let elem = $('#plantquest-assetmap-assetinfo')\n        if(null == elem) return;\n        \n        let html = elem.innerHTML\n        \n        assetCurrent.label = L.marker(\n          c_asset_coords({x: ax+1, y: ay+20 }),\n          {\n            icon: L.divIcon(\n              {\n                className: 'plantquest-assetmap-asset-label '+\n                  'plantquest-assetmap-asset-state-'+stateName,\n                html\n              }),\n          }\n        )\n        \n        // TODO: parse out from the css\n        assetCurrent.label.setOpacity(0.7);\n        \n        assetCurrent.label.assetID = assetID\n        assetCurrent.label.addTo(self.layer.asset)\n             \n        self.zoomEndRender()\n      }, 11)\n    }\n\n    \n    self.clearRoomAssets = function(roomID) {\n      for(let assetID in self.current.asset) {\n        let assetCurrent = self.current.asset[assetID]\n        if(self.data.deps.cp.asset[assetID].room !== roomID) {\n          if(assetCurrent.poly) {\n            assetCurrent.poly.remove(self.layer.asset)\n          }\n          if(assetCurrent.label) {\n            assetCurrent.label.remove(self.layer.asset)\n          }\n        }\n      }\n    }\n\n    \n    self.showRoomAssets = function(roomID) {\n      let assets = (self.data.deps.pc.room[roomID] ?\n                    self.data.deps.pc.room[roomID].asset : []) || []\n\n      for(let assetID of assets) {\n        let assetCurrent = self.current.asset[assetID]\n        if(assetCurrent && assetCurrent.alarm) {\n          self.showAsset(assetID, assetCurrent.alarm)\n        }\n      }\n    }\n\n    self.getUrl = function(mapIndex) {\n      return self.config.tilesEndPoint + '/' + mapIndex + '/{z}/{x}/{y}.png'\n    },\n    \n    self.createTile = function(mapIndex) {\n      let tileLyr = \n        L.tileLayer(self.getUrl(mapIndex), {\n          // noWrap: true,\n          // maxNativeZoom: rc.zoomLevel(),\n          bounds: self.rc.getMaxBounds(),\n          minZoom: self.config.mapMinZoom,\n          maxZoom: self.config.mapMaxZoom,\n        })\n      return tileLyr\n    },\n    \n    self.showMap = function(mapIndex) {\n      self.log('showMap', mapIndex, self.loc)\n      \n      if(mapIndex !== self.loc.map) {\n        if(self.leaflet.maptile) {\n          self.leaflet.maptile.remove(self.map)\n        }\n        // let mapurl = self.config.map[mapIndex]\n        // let bounds = [[0, 0], [...self.config.mapBounds]]\n        self.leaflet.maptile = self.createTile(mapIndex+1)\n        // self.leaflet.mapimg = L.imageOverlay(mapurl, bounds)\n        self.leaflet.maptile.addTo(self.map)\n        self.loc.map = mapIndex\n        \n        // render labels\n        self.zoomEndRender()\n\n\t\n\n        self.unselectRoom()\n\n        if(self.loc.poly) {\n          self.loc.poly.remove(self.layer.room)\n          self.loc.room = null\n        }\n        \n        self.emit({\n          srv:'plantquest',\n          part:'assetmap',\n          show:'map',\n          map: self.loc.map,\n          level: self.data.levels[self.loc.map],\n        })\n      }\n    }\n\n    \n    self.resolveRoomColor = function(stateDef, hilo) {\n      return 'hi' === hilo ? stateDef.color : self.config.room.color\n    }\n    \n\n    self.roomPopup = function(room, msg) {\n      let html = []\n\n      html.push(\n        '<h2>',\n        room.room,\n        '</h2>'\n      )\n\n      return html.join('\\n')\n    }\n\n    \n    self.getRoomAssets = function(roomID) {\n      let assets = []\n      let roomMap = self.data.deps.pc.room\n      let roomEntry = roomMap[roomID]\n      assets = roomEntry && roomEntry.asset ? roomEntry.asset.map(a=>({\n        asset: a\n      })) : assets\n      return assets\n    }\n\n\n    self.getSeneca = async function() {\n      if(null != self.seneca) {\n        return self.seneca\n      }\n\n      let endpoint = (msg) => {\n        let suffix = '/api/web' + '/public/' + msg.on\n        let origin = self.config.endpoint // 'http://127.0.0.1:8888'\n        let url = origin + suffix\n        return url\n      }\n  \n      let seneca = new Seneca({\n        log: { logger: 'flat', level: 'warn' },\n        plugin: {\n          browser: {\n            endpoint,\n            headers: {\n              'Authorization': 'Bearer ' + self.config.apikey,\n\t    },\n          }\n        },\n        timeout: 44444,\n      })\n      \n      seneca\n        .test()\n        .use(SenecaEntity)\n        .ready(async function() {\n          const seneca = this\n          // console.log('seneca ready')\n        })\n            \n      // await seneca.ready()\n      \n      await seneca.client({\n        type: 'browser',\n        pin: [\n          \n          'aim:web',\n          \n          'aim:web,on:assetmap,get:info',\n\n          'aim:web,on:assetmap,list:asset',\n          'aim:web,on:assetmap,load:asset',\n          'aim:web,on:assetmap,save:asset',\n          'aim:web,on:assetmap,remove:asset',\n\n          'aim:web,on:assetmap,list:room',\n          'aim:web,on:assetmap,load:room',\n          'aim:web,on:assetmap,save:room',\n          'aim:web,on:assetmap,remove:room',\n\n          'aim:web,on:assetmap,list:building',\n          'aim:web,on:assetmap,load:building',\n          'aim:web,on:assetmap,save:building',\n          'aim:web,on:assetmap,remove:building',\n        ]\n      })\n\n      seneca\n        .fix('srv:plantquest,part:assetmap')\n\n        .message('remove:asset', async function removeAsset(msg) {\n          let { id } = msg\n          let result = await this.post('aim:web,on:assetmap,remove:asset', { id } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            remove:'asset',\n            asset: id,\n          })\n          \n          return result\n        })\n      \n        .message('remove:room', async function removeRoom(msg) {\n          let { id } = msg\n          let result = await this.post('aim:web,on:assetmap,remove: room', { id, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            remove:'room',\n            room: id,\n          })\n          \n          return result\n        })\n      \n        .message('remove:building', async function(msg) {\n          let { id } = msg\n          let result = await this.post('aim:web,on:assetmap,remove:building', { id, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            remove:'building',\n            building: id,\n          })\n          \n          return result\n        })\n      \n        .message('save:asset', async function(msg) {\n          let { asset } = msg\n          asset = asset || {}\n          asset = { ...asset, ...{\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          } }\n          asset =\n            await this.post('aim:web,on:assetmap,save:asset', { asset: {...asset}, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            save:'asset',\n            asset: asset.asset,\n          })\n          \n          return asset\n        })\n\n        .message('save:room', async function(msg) {\n          let { room } = msg\n          room = room || {}\n          room = { ...room, ...{\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          } }\n          room =\n            await this.post('aim:web,on:assetmap,save:room', { room: {...room}, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            save:'room',\n            room: room.room,\n          })\n          \n          return room\n        })\n      \n        .message('save:building', async function(msg) {\n          let { building } = msg\n          building = building || {}\n          building = { ...building, ...{\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          } }\n          building =\n            await this.post('aim:web,on:assetmap,save:building',\n                            { building: {...building}, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            save:'building',\n            building: building.building,\n          })\n          \n          return building\n        })\n      \n        .message('load:asset', async function(msg) {\n          const { id } = msg\n          let asset = await this.post('aim:web,on:assetmap,load:asset', { id, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            load:'asset',\n            asset: asset.asset,\n          })\n          \n          return asset\n        })\n      \n        .message('load:room', async function(msg) {\n          const { id } = msg\n          let room = await this.post('aim:web,on:assetmap,load:room', { id, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            load:'room',\n            room: room.room,\n          })\n          \n          return room\n        })\n      \n        .message('load:building', async function(msg) {\n          const { id } = msg\n          let building =\n              await this.post('aim:web,on:assetmap,load:building', { id, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            load:'building',\n            building: building.building,\n          })\n          \n          return building\n        })\n      \n        .message('list:asset', async function(msg) {\n          let { query } = msg\n          query = query || {\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          }\n          let assets = await this.post('aim:web,on:assetmap,list:asset', { query, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            list:'asset',\n            assets: assets.assets,\n          })\n          \n          return assets\n        })\n\n        .message('list:room', async function(msg) {\n          let { query } = msg\n          query = query || {\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          }\n          let rooms = await this.post('aim:web,on:assetmap,list:room', { query, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            list:'room',\n            rooms: rooms.rooms,\n          })\n          \n          return rooms\n        })\n\n        .message('list:building', async function(msg) {\n          let { query } = msg\n          query = query || {\n            project_id: self.config.project_id,\n            plant_id: self.config.plant_id,\n            stage: self.config.stage,\n          }\n          let buildings =\n              await this.post('aim:web,on:assetmap,list:building', { query, } )\n          \n          self.emit({\n            srv:'plantquest',\n            part:'assetmap',\n            list:'building',\n            buildings: buildings.buildings,\n          })\n          \n          return buildings\n        })\n      \n        .message('show:map', async function(msg) {\n          // console.error(\"cmd map msgg: \", msg)\n          self.showMap(msg.map)\n        })\n      \n        .message('show:room', async function(msg) {\n          let room = self.data.roomMap[msg.room]\n          \n          if(room) {\n            if(msg.assets) {\n              if(msg.assets) {\n                for(let asset of msg.assets) {\n                  self.showAsset(asset.asset, asset.state)\n                }\n              }\n            }\n\n            if(msg.focus) {\n              self.selectRoom(room.room, { mute:true })\n            }\n          }\n          else {\n            self.log('ERROR', 'send', 'room', 'unknown-room', msg)\n          }\n          \n        })\n      \n        .message('show:plant', async function(msg) {\n          // console.error(\"cmd plant msgg: \", msg)\n          self.showMap(msg.plant)\n        })\n      \n        .message('show:floor', async function(msg) {\n          // console.error(\"cmd floor msgg: \", msg)\n          \n          self.showMap(msg.map)\n          self.clearRoomAssets()\n          self.unselectRoom()\n          self.map.setView(self.config.mapStart, self.config.mapStartZoom)\n          \n        })\n\n        .message('show:asset', async function(msg) {\n          assetShow(msg)\n        })\n\n        .message('hide:asset', async function(msg) {\n          assetShow(msg)\n        })\n\n        .message('relate:room-asset', async function(msg) {\n          self.emit({\n            srv: 'plantquest',\n            part: 'assetmap',\n            relate: 'room-asset',\n            relation: clone(self.data.deps.pc.room)\n          })\n        })\n\n        .message('srv:plantquest,part:assetmap', async function(msg) {})\n\n      await seneca.ready()\n\n      function assetShow(msg) {\n        if(Array.isArray(msg.asset) || msg.asset === null) {\n          msg.asset = msg.asset || Object.keys(self.data.assetMap)\n          \n          for(let assetID of msg.asset) {\n            let stateName = msg.state\n            let assetData = self.data.assetMap[assetID]\n            \n            if(assetData == null) {\n              self.log('ERROR', 'send', 'asset', 'unknown-asset', assetID)\n              continue\n            }\n            \n            if(assetData.xco == null || assetData.yco == null) {\n              self.log('ERROR', 'send', 'asset', 'invalid-asset', assetData)\n              continue\n            }\n            \n            self.emit({\n              srv:'plantquest',\n              part:'assetmap',\n              show:'asset',\n              before:true,\n              asset: assetData,\n            })\n\n            let showInfoBox =\n                null == msg.infobox ? self.config.infobox : !!msg.infobox \n\n            \n            self.showAsset(assetData.id, stateName,\n                           'asset' === msg.hide, !!msg.blink, false, showInfoBox)\n          }\n        }\n        else { \n          let assetRoom = self.data.deps.cp.asset[msg.asset]\n          let assetData = self.data.assetMap[msg.asset]\n          let zoom = msg.zoom || self.config.mapMaxZoom\n          \n          if(assetRoom) {\n            self.emit({\n              srv:'plantquest',\n              part:'assetmap',\n              show:'asset',\n              before:true,\n              focus: !!msg.focus,\n              zoom: zoom,\n              asset: assetData,\n            })\n            let coords = c_asset_coords({x: assetData.xco, y: assetData.yco})\n            \n            \n            setTimeout(()=>{\n              if(!!msg.focus) {\n                self.map.setView(coords, zoom)\n              }\n            }, 55)\n            \n            let showInfoBox =\n                null == msg.infobox ? self.config.infobox : !!msg.infobox\n            \n            self.showAsset(\n              msg.asset,\n              msg.state,\n              'asset' === msg.hide, !!msg.blink, false, showInfoBox)\n          }\n          else {\n            self.log('ERROR', 'send', 'asset', 'unknown-asset', msg)\n          }\n        }\n      }\n\n      \n      return self.seneca = seneca\n    }\n    \n    return self\n  }\n\n  function buildContainer() {\n    let html = [\n      '<div id=\"plantquest-assetmap-map\" class=\"plantquest-assetmap-vis\"></div>',\n    ]      \n    return html.join('')\n  }\n  \n  function fixid(idstr) {\n    return idstr.replace(/[ \\t]/g, '-')\n  }\n  \n  function clear() {\n  }\n  \n  function clone(obj) {\n    if(null != obj && 'object' === typeof obj) {\n      return JSON.parse(JSON.stringify(obj))\n    }\n    return obj\n  }\n\n\n  // pointInPolygon\n  // The MIT License (MIT) Copyright (c) 2016 James Halliday\n  // See https://github.com/substack/point-in-polygon\n  \n  function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n      return pointInPolygonNested(point, vs, start, end)\n    } else {\n      return pointInPolygonFlat(point, vs, start, end)\n    }\n  }\n\n  function pointInPolygonFlat (point, vs, start, end) {\n    let x = point[0], y = point[1]\n    let inside = false\n    if (start === undefined) start = 0\n    if (end === undefined) end = vs.length\n    let len = (end-start)/2\n    for (let i = 0, j = len - 1; i < len; j = i++) {\n      let xi = vs[start+i*2+0], yi = vs[start+i*2+1]\n      let xj = vs[start+j*2+0], yj = vs[start+j*2+1]\n      let intersect = ((yi > y) !== (yj > y))\n          && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n      if (intersect) inside = !inside\n    }\n    return inside\n  }\n  \n  function pointInPolygonNested (point, vs, start, end) {\n    let x = point[0], y = point[1]\n    let inside = false\n    if (start === undefined) start = 0\n    if (end === undefined) end = vs.length\n    let len = end - start\n    for (let i = 0, j = len - 1; i < len; j = i++) {\n      let xi = vs[i+start][0], yi = vs[i+start][1]\n      let xj = vs[j+start][0], yj = vs[j+start][1]\n      let intersect = ((yi > y) !== (yj > y))\n          && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n      if (intersect) inside = !inside\n    }\n    return inside\n  }\n  \n  // utility functions\n  \n  // transform poly coords for tilesets\n  function convertRoomPoly(img, poly) {\n    let p = []\n    for(let part of poly) {\n      p.push( rc.unproject({ x: part[1], y: img[1] - part[0] }) )\n    }\n    return p\n  }\n  \n  function convert_latlng(latlng) {\n    let Lng = rc.project(latlng)\n    return { \n      xco: Math.floor(Lng.x),\n      yco: Math.floor(Lng.y)\n    }\n    \n  }\n  \n  function convert_poly_y(img, y) {\n    return img[1] - y\n  }\n  \n  function c_asset_coords({ x, y }) {\n    return rc.unproject({ x, y })\n  }\n\n  function make_parent_key(relate, asset) {\n    return relate.p.split(/~/g).map(pn => asset[pn]).join('~')\n  }\n\n  function make_parent_val(relate, asset) {\n    return relate.p.split(/~/g).reduce(((a, pn) => (a[pn] = asset[pn], a)), {})\n  }\n\n\n  function make_child_id(relate, asset) {\n    // let ccol = 'asset' === relate.c ? 'tag' : relate.c\n    return asset[relate.c]\n  }\n\n  function insert_child(arr, child) {\n    if(arr instanceof Array) {\n      for (let i = 0; i < arr.length; i++) {\n        // ( ('~'+arr[i]) == ('~'+child) )\n        if ( (arr[i]) === (child) ) {\n          return\n        } else if ( (arr[i]) > (child) ) {\n          arr.splice(i, 0, child)\n          return\n        }\n      }\n      arr.push(child)\n    }\n    else if(arr instanceof Set) {\n      arr.add(child)\n    }\n  }\n\n  function generate(collection) {\n    let ROOM_ATYPE = {\n      'Room/Area': 1,\n    }\n    \n    let deps = {\n      cp: {},\n      pc: {},\n    }\n\n    // Use a declarative data structure to define the relations we want.\n    let relate = [\n      { pc: true, p: 'room', c: 'asset', exclude: (asset) => ROOM_ATYPE[asset.atype] },\n      { pc: true, p: 'map',c: 'building' },\n      { pc: true, p: 'building', c: 'level' },\n      { pc: true, p: 'building', c: 'map' },\n      { pc: true, p: 'map~building', c: 'level' },\n      { pc: true, p: 'map~building~level', c: 'room',include: (asset) => ROOM_ATYPE[asset.atype] },\n      { pc: true, p: 'building~level', c: 'map' },\n      { pc: true, p: 'map~level',c: 'level', include: (asset) => asset.map },\n\n      { cp: true, p: 'map~building~level', c: 'room' },\n      { cp: true, p: 'room', c: 'asset', exclude: (asset) => ROOM_ATYPE[asset.atype] },\n    ]\n\n    let maps = []\n    let levels = []\n    let buildings = new Set()\n    \n    let assetMap = {}\n    let roomMap = {}\n    \n    Object.values(collection).forEach(assets => {\n    \n      assets.forEach(asset => {\n\n        // asset = { ...asset }\n      \n        if (!ROOM_ATYPE[asset.atype]) {\n          asset.asset = asset.id // asset.tag || asset.asset\n          asset.room = asset.room || asset.room_id\n          assetMap[asset.id] = asset\n          \n        \n          asset.xco = asset.xco || asset.xval\n          asset.yco = asset.yco || asset.yval\n\n        } else {\n          asset.room = asset.room || asset.name\n          roomMap[asset.room] = asset\n          asset.poly = asset.polygon.points\n        }\n        asset.map = asset.map\n        asset.level = asset.level\n        asset.building = asset.building || asset.building_id\n      \n\n        if (null != asset.level && '' !== asset.level) {\n          if(!levels.includes(asset.level)) {\n            levels.push(asset.level)\n          }\n          \n        }\n\n        if (null != asset.building && '' !== asset.building) {\n          buildings.add(asset.building)\n        }\n\n        if (null != asset.map && '' !== asset.map) {\n          if(!maps.includes(asset.map)) {\n            maps.push(asset.map)\n          }\n        }\n\n\n        // Build each relation.\n        relate.forEach(r => {\n\n\n          // Build a Child-to-Parent\n          if (r.cp && (!r.exclude || !r.exclude(asset)) && (!r.include || r.include(asset))) {\n            let pv = make_parent_val(r, asset)\n            // console.error('pv: ', pv)\n            deps.cp[r.c] = (deps.cp[r.c] || {})\n            deps.cp[r.c][asset[r.c]] = pv\n          }\n\n          // Build a Parent-to-Child\n          if (r.pc && (!r.exclude || !r.exclude(asset)) && (!r.include || r.include(asset))) {\n            let pk = make_parent_key(r, asset)\n\n            // console.error('r.pc: ', r.p, pk, asset)\n            // console.log('PK',pk)\n\n            deps.pc[r.p] = (deps.pc[r.p] || {})\n            deps.pc[r.p][pk] = (deps.pc[r.p][pk] || {})\n            deps.pc[r.p][pk][r.c] = (deps.pc[r.p][pk][r.c] || [])\n\n            let cid = make_child_id(r, asset)\n\n            // insert_child(deps.pc[r.p][pk][r.c],''+asset[r.c])\n            insert_child(deps.pc[r.p][pk][r.c], cid)\n          \n            // deps.pc[r.p][pk][r.c] = [ ... deps.pc[r.p][pk][r.c] ]\n          \n          }\n        })\n      })\n    \n   })\n\n    // maps = [...maps]\n    // levels = [...levels]\n    buildings = Array.from(buildings)\n\n    return {\n      deps,\n      maps,\n      levels,\n      buildings,\n      assetMap,\n      roomMap\n    }\n\n  }\n  \n  function depsUnitTest(deps) {\n    const { deepEqual, deepStrictEqual } = require('assert')\n    \n    let copy = JSON.parse(JSON.stringify(require('./test_data.json').deps))\n    \n    console.log( deps, copy )\n    \n    deepStrictEqual(deps, copy, 'deepEqual Relations test')\n  }\n  \n  \n    \n  W.PlantQuestAssetMap = new PlantQuestAssetMap()\n\n\n  function injectStyle() {\n    const head = $('head')\n    const style = document.createElement('style')\n    style.innerHTML = `\n\n#plantquest-assetmap {\n    background-color: rgb(203,211,144);\n}\n\n#plantquest-assetmap-map {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: rgb(203,211,144);\n}\n\n\ndiv.plantquest-assetmap-vis {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 100;\n}\n\n\nimg.plantquest-assetmap-logo {\n    cursor: pointer;\n}\n\n\ndiv.plantquest-assetmap-asset-label {\n    xwidth: 96px;\n    xheight: 48px;\n    font-size: 16px;\n    xoverflow: hidden;\n}\n\ndiv.plantquest-assetmap-asset-label-green {\n    xcolor: #696;\n    color: white;\n    border: 2px solid #696;\n    border-radius: 4px;\n    background-color: rgba(102,153,102,0.8);\n}\n\ndiv.plantquest-assetmap-asset-label-red {\n    xcolor: #f66;\n    color: white;\n    border: 2px solid #f66;\n    border-radius: 4px;\n    background-color: rgba(255,102,102,0.8);\n}\n\n#plantquest-assetmap-assetinfo {\n    display: none;\n}\n\n\n\n/* \n * Leaflet 1.8.0, a JS library for interactive maps. https://leafletjs.com\n * (c) 2010-2022 Vladimir Agafonkin, (c) 2010-2011 CloudMade\n * BSD 2-Clause License, See https://leafletjs.com/\n */\n\n.leaflet-tile,.leaflet-zoom-anim .leaflet-zoom-hide{visibility:hidden}.leaflet-image-layer,.leaflet-layer,.leaflet-marker-icon,.leaflet-marker-shadow,.leaflet-pane,.leaflet-pane>canvas,.leaflet-pane>svg,.leaflet-tile,.leaflet-tile-container,.leaflet-zoom-box{position:absolute;left:0;top:0}.leaflet-container{overflow:hidden;-webkit-tap-highlight-color:transparent;background:#ddd;outline:0;font:12px/1.5 \"Helvetica Neue\",Arial,Helvetica,sans-serif}.leaflet-marker-icon,.leaflet-marker-shadow,.leaflet-tile{-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-user-drag:none}.leaflet-overlay-pane svg,.leaflet-tooltip{-moz-user-select:none}.leaflet-tile::selection{background:0 0}.leaflet-safari .leaflet-tile{image-rendering:-webkit-optimize-contrast}.leaflet-safari .leaflet-tile-container{width:1600px;height:1600px;-webkit-transform-origin:0 0}.leaflet-control-layers label,.leaflet-marker-icon,.leaflet-marker-shadow{display:block}.leaflet-container .leaflet-marker-pane img,.leaflet-container .leaflet-overlay-pane svg,.leaflet-container .leaflet-shadow-pane img,.leaflet-container .leaflet-tile,.leaflet-container .leaflet-tile-pane img,.leaflet-container img.leaflet-image-layer{max-width:none!important;max-height:none!important}.leaflet-container.leaflet-touch-zoom{-ms-touch-action:pan-x pan-y;touch-action:pan-x pan-y}.leaflet-container.leaflet-touch-drag{-ms-touch-action:pinch-zoom;touch-action:none;touch-action:pinch-zoom}.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom{-ms-touch-action:none;touch-action:none}.leaflet-container a{-webkit-tap-highlight-color:rgba(51,181,229,0.4);color:#0078a8}.leaflet-tile{filter:inherit}.leaflet-tile-loaded{visibility:inherit}.leaflet-zoom-box{width:0;height:0;-moz-box-sizing:border-box;box-sizing:border-box;z-index:800}.leaflet-overlay-pane,.leaflet-pane{z-index:400}.leaflet-map-pane svg,.leaflet-tile-pane{z-index:200}.leaflet-shadow-pane{z-index:500}.leaflet-marker-pane{z-index:600}.leaflet-tooltip-pane{z-index:650}.leaflet-popup-pane{z-index:700}.leaflet-map-pane canvas{z-index:100}.leaflet-vml-shape{width:1px;height:1px}.lvml{behavior:url(#default#VML);display:inline-block;position:absolute}.leaflet-control{position:relative;z-index:800;pointer-events:visiblePainted;pointer-events:auto;float:left;clear:both}.leaflet-bottom,.leaflet-top{position:absolute;z-index:1000;pointer-events:none}.leaflet-top{top:0}.leaflet-right{right:0}.leaflet-bottom{bottom:0}.leaflet-left{left:0}.leaflet-right .leaflet-control{float:right;margin-right:10px}.leaflet-top .leaflet-control{margin-top:10px}.leaflet-bottom .leaflet-control{margin-bottom:10px}.leaflet-left .leaflet-control{margin-left:10px}.leaflet-fade-anim .leaflet-tile{will-change:opacity}.leaflet-fade-anim .leaflet-popup{opacity:0;-webkit-transition:opacity .2s linear;-moz-transition:opacity .2s linear;transition:opacity .2s linear}.leaflet-fade-anim .leaflet-map-pane .leaflet-popup{opacity:1}.leaflet-zoom-animated{-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0}.leaflet-zoom-anim .leaflet-zoom-animated{will-change:transform;-webkit-transition:-webkit-transform .25s cubic-bezier(0,0,.25,1);-moz-transition:-moz-transform .25s cubic-bezier(0,0,.25,1);transition:transform .25s cubic-bezier(0,0,.25,1)}.leaflet-pan-anim .leaflet-tile,.leaflet-zoom-anim .leaflet-tile{-webkit-transition:none;-moz-transition:none;transition:none}.leaflet-interactive{cursor:pointer}.leaflet-grab{cursor:-webkit-grab;cursor:-moz-grab;cursor:grab}.leaflet-crosshair,.leaflet-crosshair .leaflet-interactive{cursor:crosshair}.leaflet-control,.leaflet-popup-pane{cursor:auto}.leaflet-dragging .leaflet-grab,.leaflet-dragging .leaflet-grab .leaflet-interactive,.leaflet-dragging .leaflet-marker-draggable{cursor:move;cursor:-webkit-grabbing;cursor:-moz-grabbing;cursor:grabbing}.leaflet-image-layer,.leaflet-marker-icon,.leaflet-marker-shadow,.leaflet-pane>svg path,.leaflet-tile-container{pointer-events:none}.leaflet-image-layer.leaflet-interactive,.leaflet-marker-icon.leaflet-interactive,.leaflet-pane>svg path.leaflet-interactive,svg.leaflet-image-layer.leaflet-interactive path{pointer-events:visiblePainted;pointer-events:auto}.leaflet-container a.leaflet-active{outline:orange solid 2px}.leaflet-zoom-box{border:2px dotted #38f;background:rgba(255,255,255,.5)}.leaflet-bar{box-shadow:0 1px 5px rgba(0,0,0,.65);border-radius:4px}.leaflet-bar a,.leaflet-bar a:hover{background-color:#fff;border-bottom:1px solid #ccc;width:26px;height:26px;line-height:26px;display:block;text-align:center;text-decoration:none;color:#000}.leaflet-bar a,.leaflet-control-layers-toggle{background-position:50% 50%;background-repeat:no-repeat;display:block}.leaflet-bar a:hover{background-color:#f4f4f4}.leaflet-bar a:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.leaflet-bar a:last-child{border-bottom-left-radius:4px;border-bottom-right-radius:4px;border-bottom:none}.leaflet-bar a.leaflet-disabled{cursor:default;background-color:#f4f4f4;color:#bbb}.leaflet-touch .leaflet-bar a{width:30px;height:30px;line-height:30px}.leaflet-touch .leaflet-bar a:first-child{border-top-left-radius:2px;border-top-right-radius:2px}.leaflet-touch .leaflet-bar a:last-child{border-bottom-left-radius:2px;border-bottom-right-radius:2px}.leaflet-control-zoom-in,.leaflet-control-zoom-out{font:bold 18px 'Lucida Console',Monaco,monospace;text-indent:1px}.leaflet-touch .leaflet-control-zoom-in,.leaflet-touch .leaflet-control-zoom-out{font-size:22px}.leaflet-control-layers{box-shadow:0 1px 5px rgba(0,0,0,.4);background:#fff;border-radius:5px}.leaflet-control-layers-toggle{background-image:url(images/layers.png);width:36px;height:36px}.leaflet-retina .leaflet-control-layers-toggle{background-image:url(images/layers-2x.png);background-size:26px 26px}.leaflet-touch .leaflet-control-layers-toggle{width:44px;height:44px}.leaflet-control-layers .leaflet-control-layers-list,.leaflet-control-layers-expanded .leaflet-control-layers-toggle{display:none}.leaflet-control-layers-expanded .leaflet-control-layers-list{display:block;position:relative}.leaflet-control-layers-expanded{padding:6px 10px 6px 6px;color:#333;background:#fff}.leaflet-control-layers-scrollbar{overflow-y:scroll;overflow-x:hidden;padding-right:5px}.leaflet-control-layers-selector{margin-top:2px;position:relative;top:1px}.leaflet-control-layers-separator{height:0;border-top:1px solid #ddd;margin:5px -10px 5px -6px}.leaflet-default-icon-path{background-image:url(images/marker-icon.png)}.leaflet-container .leaflet-control-attribution{background:rgba(255,255,255,.7);margin:0}.leaflet-control-attribution,.leaflet-control-scale-line{padding:0 5px;color:#333}.leaflet-control-attribution a{text-decoration:none}.leaflet-control-attribution a:hover{text-decoration:underline}.leaflet-container .leaflet-control-attribution,.leaflet-container .leaflet-control-scale{font-size:11px}.leaflet-left .leaflet-control-scale{margin-left:5px}.leaflet-bottom .leaflet-control-scale{margin-bottom:5px}.leaflet-control-scale-line{border:2px solid #777;border-top:none;line-height:1.1;padding:2px 5px 1px;font-size:11px;white-space:nowrap;overflow:hidden;-moz-box-sizing:border-box;box-sizing:border-box;background:rgba(255,255,255,.5)}.leaflet-control-scale-line:not(:first-child){border-top:2px solid #777;border-bottom:none;margin-top:-2px}.leaflet-control-scale-line:not(:first-child):not(:last-child){border-bottom:2px solid #777}.leaflet-touch .leaflet-bar,.leaflet-touch .leaflet-control-attribution,.leaflet-touch .leaflet-control-layers{box-shadow:none}.leaflet-touch .leaflet-bar,.leaflet-touch .leaflet-control-layers{border:2px solid rgba(0,0,0,.2);background-clip:padding-box}.leaflet-popup{position:absolute;text-align:center;margin-bottom:20px}.leaflet-popup-content-wrapper{padding:1px;text-align:left;border-radius:12px}.leaflet-popup-content{margin:13px 19px;line-height:1.4}.leaflet-popup-content p{margin:18px 0}.leaflet-popup-tip-container{width:40px;height:20px;position:absolute;left:50%;margin-left:-20px;overflow:hidden;pointer-events:none}.leaflet-popup-tip{width:17px;height:17px;padding:1px;margin:-10px auto 0;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.leaflet-popup-content-wrapper,.leaflet-popup-tip{background:#fff;color:#333;box-shadow:0 3px 14px rgba(0,0,0,.4)}.leaflet-container a.leaflet-popup-close-button{position:absolute;top:0;right:0;padding:4px 4px 0 0;border:none;text-align:center;width:18px;height:14px;font:700 16px/14px Tahoma,Verdana,sans-serif;color:#c3c3c3;text-decoration:none;background:0 0}.leaflet-container a.leaflet-popup-close-button:hover{color:#999}.leaflet-popup-scrolled{overflow:auto;border-bottom:1px solid #ddd;border-top:1px solid #ddd}.leaflet-oldie .leaflet-popup-content-wrapper{-ms-zoom:1}.leaflet-oldie .leaflet-popup-tip{width:24px;margin:0 auto}.leaflet-oldie .leaflet-popup-tip-container{margin-top:-1px}.leaflet-oldie .leaflet-control-layers,.leaflet-oldie .leaflet-control-zoom,.leaflet-oldie .leaflet-popup-content-wrapper,.leaflet-oldie .leaflet-popup-tip{border:1px solid #999}.leaflet-div-icon{background:#fff;border:1px solid #666}.leaflet-tooltip{position:absolute;padding:6px;background-color:#fff;border:1px solid #fff;border-radius:3px;color:#222;white-space:nowrap;-webkit-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;box-shadow:0 1px 3px rgba(0,0,0,.4)}.leaflet-tooltip.leaflet-clickable{cursor:pointer;pointer-events:auto}.leaflet-tooltip-bottom:before,.leaflet-tooltip-left:before,.leaflet-tooltip-right:before,.leaflet-tooltip-top:before{position:absolute;pointer-events:none;border:6px solid transparent;background:0 0;content:\"\"}.leaflet-tooltip-bottom{margin-top:6px}.leaflet-tooltip-top{margin-top:-6px}.leaflet-tooltip-bottom:before,.leaflet-tooltip-top:before{left:50%;margin-left:-6px}.leaflet-tooltip-top:before{bottom:0;margin-bottom:-12px;border-top-color:#fff}.leaflet-tooltip-bottom:before{top:0;margin-top:-12px;margin-left:-6px;border-bottom-color:#fff}.leaflet-tooltip-left{margin-left:-6px}.leaflet-tooltip-right{margin-left:6px}.leaflet-tooltip-left:before,.leaflet-tooltip-right:before{top:50%;margin-top:-6px}.leaflet-tooltip-left:before{right:0;margin-right:-12px;border-left-color:#fff}.leaflet-tooltip-right:before{left:0;margin-left:-12px;border-right-color:#fff}\n\n/* MIT LICENSE, Copyright (c) 2014-2015, Justin Manley */\n.leaflet-toolbar-0{list-style:none;padding-left:0;border:2px solid rgba(0,0,0,.2);border-radius:4px}.leaflet-toolbar-0>li{position:relative}.leaflet-toolbar-0>li>.leaflet-toolbar-icon{display:block;width:30px;height:30px;line-height:30px;margin-right:0;padding-right:0;border-right:0;text-align:center;text-decoration:none;background-color:#fff}.leaflet-toolbar-0>li>.leaflet-toolbar-icon:hover{background-color:#f4f4f4}.leaflet-toolbar-0 .leaflet-toolbar-1{display:none;list-style:none}.leaflet-toolbar-tip-container{margin:-16px auto 0;height:16px;position:relative;overflow:hidden}.leaflet-toolbar-tip{width:16px;height:16px;margin:-8px auto 0;background-color:#fff;border:2px solid rgba(0,0,0,.2);background-clip:content-box;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);border-radius:4px}.leaflet-control-toolbar .leaflet-toolbar-1>li:last-child>.leaflet-toolbar-icon,.leaflet-popup-toolbar>li:last-child>.leaflet-toolbar-icon{border-top-right-radius:4px;border-bottom-right-radius:4px}.leaflet-control-toolbar>li>.leaflet-toolbar-icon{border-bottom:1px solid #ccc}.leaflet-control-toolbar>li:first-child>.leaflet-toolbar-icon{border-top-left-radius:4px;border-top-right-radius:4px}.leaflet-control-toolbar>li:last-child>.leaflet-toolbar-icon{border-bottom-left-radius:4px;border-bottom-right-radius:4px;border-bottom-width:0}.leaflet-control-toolbar .leaflet-toolbar-1{margin:0;padding:0;position:absolute;left:30px;top:0;white-space:nowrap;height:30px}.leaflet-control-toolbar .leaflet-toolbar-1>li{display:inline-block}.leaflet-control-toolbar .leaflet-toolbar-1>li>.leaflet-toolbar-icon{display:block;background-color:#919187;border-left:1px solid #aaa;color:#fff;font:11px/19px \"Helvetica Neue\",Arial,Helvetica,sans-serif;line-height:30px;text-decoration:none;padding-left:10px;padding-right:10px;height:30px}.leaflet-control-toolbar .leaflet-toolbar-1>li>.leaflet-toolbar-icon:hover{background-color:#a0a098}.leaflet-popup-toolbar{position:relative;box-sizing:content-box}.leaflet-popup-toolbar>li{float:left}.leaflet-popup-toolbar>li>.leaflet-toolbar-icon{border-right:1px solid #ccc}.leaflet-popup-toolbar>li:first-child>.leaflet-toolbar-icon{border-top-left-radius:4px;border-bottom-left-radius:4px}.leaflet-popup-toolbar>li:last-child>.leaflet-toolbar-icon{border-bottom-width:0;border-right:none}.leaflet-popup-toolbar .leaflet-toolbar-1{position:absolute;top:30px;left:0;padding-left:0}.leaflet-popup-toolbar .leaflet-toolbar-1>li>.leaflet-toolbar-icon{position:relative;float:left;width:30px;height:30px}\n.marker-cluster-small {\n\tbackground-color: rgba(181, 226, 140, 0.6);\n\t}\n.marker-cluster-small div {\n\tbackground-color: rgba(110, 204, 57, 0.6);\n\t}\n\n.marker-cluster-medium {\n\tbackground-color: rgba(241, 211, 87, 0.6);\n\t}\n.marker-cluster-medium div {\n\tbackground-color: rgba(240, 194, 12, 0.6);\n\t}\n\n.marker-cluster-large {\n\tbackground-color: rgba(253, 156, 115, 0.6);\n\t}\n.marker-cluster-large div {\n\tbackground-color: rgba(241, 128, 23, 0.6);\n\t}\n\n\t/* IE 6-8 fallback colors */\n.leaflet-oldie .marker-cluster-small {\n\tbackground-color: rgb(181, 226, 140);\n\t}\n.leaflet-oldie .marker-cluster-small div {\n\tbackground-color: rgb(110, 204, 57);\n\t}\n\n.leaflet-oldie .marker-cluster-medium {\n\tbackground-color: rgb(241, 211, 87);\n\t}\n.leaflet-oldie .marker-cluster-medium div {\n\tbackground-color: rgb(240, 194, 12);\n\t}\n\n.leaflet-oldie .marker-cluster-large {\n\tbackground-color: rgb(253, 156, 115);\n\t}\n.leaflet-oldie .marker-cluster-large div {\n\tbackground-color: rgb(241, 128, 23);\n}\n\n.marker-cluster {\n\tbackground-clip: padding-box;\n\tborder-radius: 20px;\n\t}\n.marker-cluster div {\n\twidth: 30px;\n\theight: 30px;\n\tmargin-left: 5px;\n\tmargin-top: 5px;\n\n\ttext-align: center;\n\tborder-radius: 15px;\n\tfont: 12px \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n\t}\n.marker-cluster span {\n\tline-height: 30px;\n\t}\n.leaflet-cluster-anim .leaflet-marker-icon, .leaflet-cluster-anim .leaflet-marker-shadow {\n\t-webkit-transition: -webkit-transform 0.3s ease-out, opacity 0.3s ease-in;\n\t-moz-transition: -moz-transform 0.3s ease-out, opacity 0.3s ease-in;\n\t-o-transition: -o-transform 0.3s ease-out, opacity 0.3s ease-in;\n\ttransition: transform 0.3s ease-out, opacity 0.3s ease-in;\n}\n\n.leaflet-cluster-spider-leg {\n\t/* stroke-dashoffset (duration and function) should match with leaflet-marker-icon transform in order to track it exactly */\n\t-webkit-transition: -webkit-stroke-dashoffset 0.3s ease-out, -webkit-stroke-opacity 0.3s ease-in;\n\t-moz-transition: -moz-stroke-dashoffset 0.3s ease-out, -moz-stroke-opacity 0.3s ease-in;\n\t-o-transition: -o-stroke-dashoffset 0.3s ease-out, -o-stroke-opacity 0.3s ease-in;\n\ttransition: stroke-dashoffset 0.3s ease-out, stroke-opacity 0.3s ease-in;\n}\n\n\n.leaflet-toolbar-0>li>.leaflet-toolbar-icon {\n  width: 80px;\n}\n\n.control-panel {\n  position: absolute;\n  top: 0em;\n  left: 5em;\n  background-color: white;\n  border: 1px solid black;\n  width: 10em;\n  height: 6em;\n  padding: 10px;\n  font-size: 14px;\n  font-family: Arial, sans-serif;\n  word-wrap: break-word;\n  height: fit-content;\n  width: fit-content;\n  opacity: 0.5;\n  /*block-size: fit-content;*/\n}\n\n\n.class1 {\n    background-color: transparent;\n    border: 0;\n    box-shadow: none;\n} \n\n.polygon-labels {\n  background-color: transparent;\n  font-weight: bold;\n  color: #000000;\n  border: 0;\n  box-shadow: none;\n  font-size: 1em;\n}\n\ndiv.plantquest-assetmap-asset-label {\n    width: 200px;\n}\n\ndiv.plantquest-assetmap-asset-state-up {\n    color: white;\n    border: 2px solid #696;\n    border-radius: 4px;\n    background-color: #696;\n    opacity: 0;\n}\n\ndiv.plantquest-assetmap-asset-state-down {\n    color: white;\n    border: 2px solid #666;\n    border-radius: 4px;\n    background-color: #666;\n    opacity: 0.7;\n}\n\ndiv.plantquest-assetmap-asset-state-missing {\n    color: white;\n    border: 2px solid #f3f;\n    border-radius: 4px;\n    background-color: #f3f;\n    opacity: 0.7;\n}\n\ndiv.plantquest-assetmap-asset-state-alarm {\n    color: white;\n    border: 2px solid #f33;\n    border-radius: 4px;\n    background-color: #f33;\n    opacity: 0.7;\n}\n\n`\n    head.appendChild(style)\n  }\n  \n})(window, document);\n\n"],"names":["t","o","i","L","Toolbar2","Layer","Class","extend","statics","baseClass","options","className","filter","actions","initialize","setOptions","_toolbar_type","constructor","_toolbar_class_id","addTo","_arguments","slice","call","arguments","addLayer","onAdd","_toolbars","_calculateDepth","removeLayer","onRemove","appendToContainer","e","n","s","_container","_ul","DomUtil","create","_disabledEvents","length","DomEvent","on","stopPropagation","_getActionConstructor","_createIcon","prototype","apply","enable","_active","disable","_hide","style","display","_show","parentToolbar","Evented","include","Mixin","Events","toolbar","Map","addInitHook","Action","Handler","toolbarIcon","html","tooltip","subToolbar","preventDefault","_enabled","addHooks","removeHooks","_icon","_link","innerHTML","setAttribute","addClass","_addSubToolbar","push","toolbarAction","extendOptions","Control","_control","Toolbar","getContainer","remove","removeFrom","control","Popup","anchor","_marker","Marker","icon","DivIcon","iconAnchor","_map","_setStyles","setLatLng","point","a","querySelectorAll","l","r","c","h","parentNode","parseInt","getStyle","Math","ceil","parseFloat","width","_tipContainer","_tip","max","height","Point","marginLeft","x","marginTop","y","popup","window","require$$0","W","D","PLANTQUEST_ASSETMAP_DEBUG","log","args","PLANTQUEST_ASSETMAP_LOG","console","scriptID","random","substring","Pkg","version","PlantQuestAssetMap","id","$","querySelector","bind","$All","Element","createElement","rc","self","info","name","config","domInterval","mapInterval","mapBounds","mapImg","mapStart","mapStartZoom","mapRoomFocusZoom","mapMinZoom","mapMaxZoom","assetFontScaleRoom","assetFontScaleZoom","assetFontHideZoom","showAllAssets","debugClick","infobox","data","mode","apikey","endpoint","tilesEndPoint","states","up","color","marker","down","missing","alarm","map","start","level","room","label","zoom","plants","asset","cluster","assetMap","roomMap","current","started","upload","assetI","interval","listeners","clearRoomAssets","unselectRoom","setView","JSON","stringify","base","endsWith","loading","target","clearInterval","loadingInterval","load","render","emit","srv","part","state","setInterval","done","seneca","getSeneca","processData","json","assetProps","assets","rowI","row","assetID","reduce","p","rooms","loadData","dataLoaded","query","project_id","plant_id","stage","post","buildings","deps","maps","levels","generate","head","skript","document","appendChild","waiter","PLANTQUEST_ASSETMAP_DATA","fetch","then","response","ok","Error","status","catch","err","injectStyle","root","boxSizing","backgroundColor","padding","textAlign","position","buildContainer","setTimeout","vis","elem","build","showMap","send","msg","result","setZoom","view","listen","listener","toString","replace","click","what","event","Object","assign","forEach","ctrl","loc","poly","chosen","stateShown","leaflet","layer","ms","mapurl","bounds","crs","CRS","Simple","scrollWheelZoom","attributionControl","minZoom","maxZoom","RasterCoords","createPane","getPane","zIndex","pointerEvents","layerGroup","name$","zoomStartRender","zoomEndRender","c_asset_coords","mapCenter","getCenter","circles","markerClusterGroup","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","maxClusterRadius","chunkedLoading","spiderLegPolylineOptions","weight","opacity","spiderfyLinear","spiderfyLinearDistance","spiderfyLinearSeparation","mev","xco","yco","convert_latlng","latlng","assetlist","getAllChildMarkers","MarkerCluster","assetCurrent","lem","getElement","fontSize","blinkId","blink","blinkState","generate_labels","poly_labels","area","room_poly","convertRoomPoly","polygon","pane","permanent","direction","bindTooltip","_c","getBounds","setContent","createDebugLog","content","debugLog","container","_div","textContent","disableClickPropagation","disableScrollPropagation","asset_data","addControl","meta","show_coords","show","tag","levelActions","index","plant","getZoom","pos","labels","prev_labels","labelZoomLevel","setLabel","checkRooms","convert_poly_y","values","alarmState","inside","pointInPolygon","alreadyShown","drawRoom","roomState","selectRoom","message","roomId","opts","isChosen","focusRoom","prevRoom","prevRoomState","popop","roomlatlng","roompos_y","roompos_x","roompos","autoClose","closeOnClick","roomPopup","openOn","showRoomAssets","mute","select","setStyle","resolveRoomColor","showRoom","stateName","keys","stateDef","alertRoomState","roomCurrent","roomID","newStateDef","actualStateDef","newPriority","indexOf","pc","assetState","priority","showAsset","hide","assetPoint","ax","ay","ay_poly","circle","radius","divIcon","setOpacity","cp","getUrl","mapIndex","createTile","tileLyr","tileLayer","getMaxBounds","maptile","hilo","join","getRoomAssets","roomEntry","suffix","origin","url","Seneca","logger","plugin","browser","headers","timeout","test","use","SenecaEntity","ready","client","type","pin","fix","removeAsset","removeRoom","building","save","list","focus","assetShow","relate","relation","clone","Array","isArray","assetData","before","showInfoBox","assetRoom","coords","obj","parse","vs","end","pointInPolygonNested","pointInPolygonFlat","undefined","len","j","xi","yi","xj","yj","intersect","img","unproject","Lng","project","floor","make_parent_key","split","pn","make_parent_val","make_child_id","insert_child","arr","child","splice","Set","add","collection","ROOM_ATYPE","exclude","atype","room_id","xval","yval","points","building_id","includes","pv","pk","cid","from"],"mappings":"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"}